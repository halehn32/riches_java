# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

################################################################################################################################################
# Fortify lets you build secure software fast with an appsec platform that automates testing throughout the DevSecOps pipeline. Fortify static,#
# dynamic, interactive, and runtime security testing is available on premises or as a service. To learn more about Fortify, start a free trial #
# or contact our sales team, visit microfocus.com/appsecurity.                                                                                 #
#                                                                                                                                              #
# Use this workflow template as a basis for integrating Fortify on Demand Static Application Security Testing(SAST) into your GitHub workflows.#
# This template demonstrates the steps to prepare the code+dependencies, initiate a scan, download results once complete and import into       #
# GitHub Security Code Scanning Alerts. Existing customers should review inputs and environment variables below to configure scanning against  #
# an existing application in your Fortify on Demand tenant. Additional information is available in the comments throughout the workflow, the   #
# documentation for the Fortify actions used, and the Fortify on Demand / ScanCentral Client product documentation. If you need additional     #
# assistance with configuration, feel free to create a help ticket in the Fortify on Demand portal.                                            #
################################################################################################################################################

name: Fortify on Demand Scan

# TODO: Customize trigger events based on your DevSecOps processes and typical FoD SAST scan time
on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  FoD-SAST-Scan:
    # Use the appropriate runner for building your source code.
    # TODO: Use a Windows runner for .NET projects that use msbuild. Additional changes to RUN commands will be required to switch to Windows syntax.
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v3

      # Java is required to run the various Fortify utilities.
      # When scanning a Java application, please use the appropriate Java version for building your application.
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu'

      # Start Fortify on Demand SAST scan and wait until results complete. For more information on FoDUploader commands, see https://github.com/fod-dev/fod-uploader-java
      # TODO: Update ENV variables for your application and create the necessary GitHub Secrets.  Helpful hints:
      #   Credentials and release ID should be obtained from your FoD tenant (either Personal Access Token or API Key can be used).
      #   Automated Audit preference should be configured for the release's Static Scan Settings in the Fortify on Demand portal.
      - name: Run FoD SAST Scan
        uses: fortify/github-action/fod-sast-scan@v1
        env:
          FOD_URL: https://ams.fortify.com
          FOD_RELEASE: ${{ secrets.FOD_RELEASE_ID }}
          FOD_TENANT: ${{ secrets.FOD_TENANT }}
          FOD_USER: ${{ secrets.FOD_USER }}
          FOD_PAT: ${{ secrets.FOD_PAT }}
          EXTRA_PACKAGE_OPTS: -bt none -targs "-cp 'jsplibs/**/*.jar;lib/**/*.jar;WEB-INF/lib/**/*.jar'" -targs "-source 1.8" -targs "-java-build-dir 'WEB-INF/classes'"
          DO_WAIT: true
          DO_EXPORT: true

      # Once scan completes, pull SAST issues from Fortify on Demand and generate SARIF output.
    #  - name: Export results to GitHub-optimized SARIF
      #  uses: fortify/gha-export-vulnerabilities@fcb374411cff9809028c911dabb8b57dbdae623b
      #  with:
       #   fod_base_url: "https://ams.fortify.com/"
        #  fod_tenant: ${{ secrets.FOD_TENANT }}
       #   fod_user: ${{ secrets.FOD_USER }}
       #   fod_password: ${{ secrets.FOD_PAT }}
       #   fod_release_id: ${{ secrets.FOD_RELEASE_ID }}

      # Import Fortify on Demand results to GitHub Security Code Scanning
     # - name: Import Results
       # uses: github/codeql-action/upload-sarif@v2
      #  with:
       #   sarif_file: ./gh-fortify-sast.sarif
